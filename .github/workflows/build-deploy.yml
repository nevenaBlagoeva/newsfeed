name: Build & Deploy Lambdas

on:
  push:
    branches: [main]

env:
  ARTIFACT_BUCKET: newsfeed-lambda-artifacts
  AWS_REGION: eu-west-1
  BUILD_DIR: .build

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        lambda: [fetcher, filter, ingest, ingest_api, retrieve]

    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Poetry
        run: pip install poetry

      - name: Update Poetry lock file
        run: poetry lock

      - name: Install dependencies and run tests
        run: |
          poetry install --no-root
          poetry run pytest

      - name: Export requirements from Poetry
        run: poetry export -f requirements.txt --without-hashes -o requirements.txt

      - name: Ensure artifact bucket exists (idempotent)
        run: |
          aws s3api head-bucket --bucket "$ARTIFACT_BUCKET" 2>/dev/null || \
          aws s3 mb "s3://$ARTIFACT_BUCKET"

      - name: Package Lambda
        run: |
          set -e
          SRC_DIR=src/lambdas/${{ matrix.lambda }}
          PKG_DIR=${{ env.BUILD_DIR }}/pkg_${{ matrix.lambda }}
          ZIP_DIR=${{ env.BUILD_DIR }}/${{ matrix.lambda }}
          ZIPFILE=$ZIP_DIR/newsfeed-${{ matrix.lambda }}.zip

          # Clean previous build
          rm -rf "$PKG_DIR" "$ZIP_DIR"
          mkdir -p "$PKG_DIR" "$ZIP_DIR"

          # Copy lambda code
          cp -r "$SRC_DIR"/* "$PKG_DIR"/

          # Copy shared code
          cp -r src/shared "$PKG_DIR/"
          touch "$PKG_DIR/shared/__init__.py"

          # Install dependencies from freshly exported requirements.txt
          pip install --upgrade pip
          pip install -r requirements.txt -t "$PKG_DIR"

          # Create zip
          (cd "$PKG_DIR" && zip -r "newsfeed-${{ matrix.lambda }}.zip" . -x "__pycache__/*" "*.pyc")
          mv "$PKG_DIR/newsfeed-${{ matrix.lambda }}.zip" "$ZIPFILE"

      - name: Upload artifact to S3
        run: |
          aws s3 cp ${{ env.BUILD_DIR }}/${{ matrix.lambda }}/newsfeed-${{ matrix.lambda }}.zip \
            s3://$ARTIFACT_BUCKET/${{ matrix.lambda }}/newsfeed-${{ matrix.lambda }}.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init & Apply
        run: |
          terraform init
          terraform apply -auto-approve
        working-directory: ./terraform
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: eu-west-1
          TF_VAR_reddit_client_id: ${{ secrets.REDDIT_CLIENT_ID }}
          TF_VAR_reddit_client_secret: ${{ secrets.REDDIT_CLIENT_SECRET }}
